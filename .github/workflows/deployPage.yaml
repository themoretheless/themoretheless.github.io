name: Deploy page to branch page

# Run workflow on every push to the master branch
on:
  push:
    branches:
      - master
      - development
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
#permissions:
#  actions: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy-to-github-pages:
    # Use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
    # Uses GitHub's checkout action to checkout code form the master branch
    - uses: actions/checkout@v3.1.0
    
    - name: Checkout current repository
      shell: pwsh
      run: |
        Write-Host $Env:GITHUB_SERVER_URL/$Env:GITHUB_REPOSITORY        
        git checkout main
    
    # Setup .NET Core SDK
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3.0.2
      with:
        dotnet-version: '7.0.x'
        dotnet-quality: 'preview'

    # Publishes Blazor project to the release-folder
    # Using the -c (--configuration) argument, you can tell to build the project using the Release configuration.
    # Using the -o (--output) argument, you can specify where to put the published files. Tell dotnet to publish the project to the release folder.
    # The --nologo argument will prevent some unnecessary lines from being output to the console.
    - name: Publish .NET Core Project
      run: dotnet publish 'src/Tmtl.Client/Tmtl.Client.csproj' -c Release -o release --nologo
      
    # Changes the base tag in index.html from ‘/’ to ‘Tmtl.Client’ to match the GitHub Pages repository subdirectory
    #- name: Change base-tag in index.html from / to Tmtl.Client
    # run: sed -i ‘s/<base href=”\/” \/>/<base href=”\/Tmtl.Client\/” \/>/g’ release/wwwroot/index.html
  
    # Copy index.html to 404.html to serve the same file when a file is not found
    - name: copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # Add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll
      
   # Copy release/wwroot
    - name: Commit wwwroot to GitHub pages
      uses: JamesIves/github-pages-deploy-action@v4.4.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: page
        FOLDER: release/wwwroot
   
